{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "hostingPlanName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Azure App Services use \"Hosting Plans\" to define the compute resources that will run your app. The name of this plan will also be used elsewhere throughout this deployment, as part of your database host name and your default web site name. (This plan will be created as a consumption plan)"
      }
    },
    "variables": {
      "webSiteName": "[concat(tolower(parameters('hostingPlanName')), '-web', uniqueString(resourceGroup().id))]",
      "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
      "StorageAccountId": "[concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
      "repoUrl": "https://github.com/bretthackermsft/dynamic-tags.git",
      "repoBranch": "master"
    },
  "resources": [
    {
      "comments": "",
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "Storage",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "name": "[parameters('hostingPlanName')]",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "kind": "functionapp",
      "name": "[variables('webSiteName')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
      },
      "properties": {
        "name": "[variables('webSiteName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(variables('webSiteName'), '/appsettings')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
      },
      "loadBalancing": "LeastRequests",
      "cors": {
        "allowedOrigins": [
          "https://functions.azure.com",
          "https://functions-staging.azure.com",
          "https://functions-next.azure.com"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
      ],
      "properties": {
        "PROJECT": "DynamicTags/DynamicTags.csproj"
      }
    },
    {
      "name": "[concat(variables('webSiteName'), '/web')]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]",
        "[concat('Microsoft.Web/sites/', variables('webSiteName'), '/config/appsettings')]"
      ],
      "tags": {
        "displayName": "WebCodeDeploy"
      },
      "properties": {
        "RepoUrl": "[variables('repoUrl')]",
        "branch": "[variables('repoBranch')]",
        "IsManualIntegration": true
      }
    },
    {
      "type": "Microsoft.EventGrid/eventSubscriptions",
      "name": "mySubscription",
      "apiVersion": "2017-09-15-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]",
        "[concat('Microsoft.Web/sites/', variables('webSiteName'), '/web')]"
      ],
      "properties": {
        "destination": {
          "endpointType": "WebHook",
          "properties": {
            "endpointUrl": "[concat('https://', variables('webSiteName'), '.azurewebsites.net/api/DynamicTags']"
          }
        },
        "filter": {
          "subjectBeginsWith": "",
          "subjectEndsWith": "",
          "isSubjectCaseSensitive": false,
          "includedEventTypes": [ "Microsoft.Resources.ResourceWriteSuccess" ]
        }
      }
    }
  ]
}